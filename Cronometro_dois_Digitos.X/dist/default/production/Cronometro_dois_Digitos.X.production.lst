

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu May 18 13:43:37 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _PORTD	set	3971
    53  0000                     _INTCON3bits	set	4080
    54  0000                     _INTCONbits	set	4082
    55  0000                     _TRISD	set	3989
    56  0000                     _TRISBbits	set	3987
    57  0000                     _INT1IF	set	32640
    58  0000                     _INT0IF	set	32657
    59                           
    60                           ; #config settings
    61  0000                     
    62                           	psect	cinit
    63  0000FC                     __pcinit:
    64                           	opt stack 0
    65  0000FC                     start_initialization:
    66                           	opt stack 0
    67  0000FC                     __initialization:
    68                           	opt stack 0
    69                           
    70                           ; Clear objects allocated to BITCOMRAM (1 bytes)
    71  0000FC  6A13               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
    72                           
    73                           ; Clear objects allocated to COMRAM (2 bytes)
    74  0000FE  6A12               	clrf	(__pbssCOMRAM+1)& (0+255),c
    75  000100  6A11               	clrf	__pbssCOMRAM& (0+255),c
    76  000102                     end_of_initialization:
    77                           	opt stack 0
    78  000102                     __end_of__initialization:
    79                           	opt stack 0
    80  000102  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    81  000104  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    82  000106  0100               	movlb	0
    83  000108  EF51  F000         	goto	_main	;jump to C main() function
    84                           
    85                           	psect	bitbssCOMRAM
    86  000098                     __pbitbssCOMRAM:
    87                           	opt stack 0
    88  000098                     _contar:
    89                           	opt stack 0
    90  000098                     	ds	1
    91                           
    92                           	psect	bssCOMRAM
    93  000011                     __pbssCOMRAM:
    94                           	opt stack 0
    95  000011                     _disp2:
    96                           	opt stack 0
    97  000011                     	ds	1
    98  000012                     _disp1:
    99                           	opt stack 0
   100  000012                     	ds	1
   101                           
   102                           	psect	cstackCOMRAM
   103  000001                     __pcstackCOMRAM:
   104                           	opt stack 0
   105  000001                     ??_isr:
   106                           
   107                           ; 1 bytes @ 0x0
   108  000001                     	ds	14
   109  00000F                     ??_main:
   110                           
   111                           ; 1 bytes @ 0xE
   112  00000F                     	ds	2
   113                           
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 83 in file "main.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;		None
   124 ;; Return value:  Size  Location     Type
   125 ;;                  1    wreg      void 
   126 ;; Registers used:
   127 ;;		wreg, status,2, status,0, cstack
   128 ;; Tracked objects:
   129 ;;		On entry : 0/0
   130 ;;		On exit  : 0/0
   131 ;;		Unchanged: 0/0
   132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   133 ;;      Params:         0       0       0       0       0       0       0       0       0
   134 ;;      Locals:         0       0       0       0       0       0       0       0       0
   135 ;;      Temps:          2       0       0       0       0       0       0       0       0
   136 ;;      Totals:         2       0       0       0       0       0       0       0       0
   137 ;;Total ram usage:        2 bytes
   138 ;; Hardware stack levels required when called:    2
   139 ;; This function calls:
   140 ;;		_atualiza_PORTD
   141 ;;		_conta
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148  0000A2                     __ptext0:
   149                           	opt stack 0
   150  0000A2                     _main:
   151                           	opt stack 29
   152                           
   153                           ;main.c: 85: TRISBbits.RB0 = 1;
   154                           
   155                           ;incstack = 0
   156  0000A2  8093               	bsf	3987,0,c	;volatile
   157                           
   158                           ;main.c: 86: TRISBbits.RB1 = 1;
   159  0000A4  8293               	bsf	3987,1,c	;volatile
   160                           
   161                           ;main.c: 87: TRISD = 0;
   162  0000A6  0E00               	movlw	0
   163  0000A8  6E95               	movwf	3989,c	;volatile
   164                           
   165                           ;main.c: 88: INTCONbits.INT0IE = 1;
   166  0000AA  88F2               	bsf	intcon,4,c	;volatile
   167                           
   168                           ;main.c: 89: INTCON3bits.INT1IE = 1;
   169  0000AC  86F0               	bsf	intcon3,3,c	;volatile
   170                           
   171                           ;main.c: 90: INTCONbits.GIE = 1;
   172  0000AE  8EF2               	bsf	intcon,7,c	;volatile
   173                           
   174                           ;main.c: 91: INTCONbits.PEIE = 1;
   175  0000B0  8CF2               	bsf	intcon,6,c	;volatile
   176                           
   177                           ;main.c: 92: disp1 = 0;
   178  0000B2  0E00               	movlw	0
   179  0000B4  6E12               	movwf	_disp1,c
   180                           
   181                           ;main.c: 93: disp2 = 0;
   182  0000B6  0E00               	movlw	0
   183  0000B8  6E11               	movwf	_disp2,c
   184                           
   185                           ;main.c: 94: PORTD = 0;
   186  0000BA  0E00               	movlw	0
   187  0000BC  6E83               	movwf	3971,c	;volatile
   188                           
   189                           ;main.c: 95: contar = 0;
   190  0000BE  9013               	bcf	_contar/(0+8),_contar& (0+7),c
   191  0000C0                     l673:
   192                           
   193                           ;main.c: 98: if (contar) conta();
   194  0000C0  B013               	btfsc	_contar/(0+8),_contar& (0+7),c
   195  0000C2  EC71  F000         	call	_conta	;wreg free
   196                           
   197                           ;main.c: 99: atualiza_PORTD();
   198  0000C6  EC86  F000         	call	_atualiza_PORTD	;wreg free
   199                           
   200                           ;main.c: 100: _delay((unsigned long)((1000)*(4000000/4000.0)));
   201  0000CA  0E06               	movlw	6
   202  0000CC  6E10               	movwf	(??_main+1)& (0+255),c
   203  0000CE  0E13               	movlw	19
   204  0000D0  6E0F               	movwf	??_main& (0+255),c
   205  0000D2  0EAE               	movlw	174
   206  0000D4                     u67:
   207  0000D4  2EE8               	decfsz	wreg,f,c
   208  0000D6  D7FE               	bra	u67
   209  0000D8  2E0F               	decfsz	??_main& (0+255),f,c
   210  0000DA  D7FC               	bra	u67
   211  0000DC  2E10               	decfsz	(??_main+1)& (0+255),f,c
   212  0000DE  D7FA               	bra	u67
   213  0000E0  D7EF               	goto	l673
   214  0000E2                     __end_of_main:
   215                           	opt stack 0
   216                           intcon	equ	0xFF2
   217                           intcon3	equ	0xFF0
   218                           wreg	equ	0xFE8
   219                           
   220 ;; *************** function _conta *****************
   221 ;; Defined at:
   222 ;;		line 108 in file "main.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   236 ;;      Params:         0       0       0       0       0       0       0       0       0
   237 ;;      Locals:         0       0       0       0       0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0       0       0
   239 ;;      Totals:         0       0       0       0       0       0       0       0       0
   240 ;;Total ram usage:        0 bytes
   241 ;; Hardware stack levels used:    1
   242 ;; Hardware stack levels required when called:    1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		_main
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text1
   251  0000E2                     __ptext1:
   252                           	opt stack 0
   253  0000E2                     _conta:
   254                           	opt stack 29
   255                           
   256                           ;main.c: 109: disp1++;
   257                           
   258                           ;incstack = 0
   259  0000E2  2A12               	incf	_disp1,f,c
   260                           
   261                           ;main.c: 110: if (disp1 > 9) {
   262  0000E4  0E09               	movlw	9
   263  0000E6  6412               	cpfsgt	_disp1,c
   264  0000E8  0012               	return	
   265                           
   266                           ;main.c: 111: disp1 = 0;
   267  0000EA  0E00               	movlw	0
   268  0000EC  6E12               	movwf	_disp1,c
   269                           
   270                           ;main.c: 112: disp2++;
   271  0000EE  2A11               	incf	_disp2,f,c
   272                           
   273                           ;main.c: 113: if (disp2 > 9) {
   274  0000F0  0E09               	movlw	9
   275  0000F2  6411               	cpfsgt	_disp2,c
   276  0000F4  0012               	return	
   277                           
   278                           ;main.c: 114: disp2 = 0;
   279  0000F6  0E00               	movlw	0
   280  0000F8  6E11               	movwf	_disp2,c
   281  0000FA  0012               	return	
   282  0000FC                     __end_of_conta:
   283                           	opt stack 0
   284                           intcon	equ	0xFF2
   285                           intcon3	equ	0xFF0
   286                           wreg	equ	0xFE8
   287                           
   288 ;; *************** function _atualiza_PORTD *****************
   289 ;; Defined at:
   290 ;;		line 104 in file "main.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, status,2, status,0
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   304 ;;      Params:         0       0       0       0       0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0       0       0       0       0
   307 ;;      Totals:         0       0       0       0       0       0       0       0       0
   308 ;;Total ram usage:        0 bytes
   309 ;; Hardware stack levels used:    1
   310 ;; Hardware stack levels required when called:    1
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text2
   319  00010C                     __ptext2:
   320                           	opt stack 0
   321  00010C                     _atualiza_PORTD:
   322                           	opt stack 29
   323                           
   324                           ;main.c: 105: PORTD = (disp2 << 4) | disp1;
   325                           
   326                           ;incstack = 0
   327  00010C  3811               	swapf	_disp2,w,c
   328  00010E  0BF0               	andlw	240
   329  000110  1012               	iorwf	_disp1,w,c
   330  000112  6E83               	movwf	3971,c	;volatile
   331  000114  0012               	return		;funcret
   332  000116                     __end_of_atualiza_PORTD:
   333                           	opt stack 0
   334                           intcon	equ	0xFF2
   335                           intcon3	equ	0xFF0
   336                           wreg	equ	0xFE8
   337                           
   338 ;; *************** function _isr *****************
   339 ;; Defined at:
   340 ;;		line 119 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   354 ;;      Params:         0       0       0       0       0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0       0       0       0       0
   356 ;;      Temps:         14       0       0       0       0       0       0       0       0
   357 ;;      Totals:        14       0       0       0       0       0       0       0       0
   358 ;;Total ram usage:       14 bytes
   359 ;; Hardware stack levels used:    1
   360 ;; This function calls:
   361 ;;		Nothing
   362 ;; This function is called by:
   363 ;;		Interrupt level 2
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           	psect	intcode
   368  000008                     __pintcode:
   369                           	opt stack 0
   370  000008                     _isr:
   371                           	opt stack 29
   372                           
   373                           ;incstack = 0
   374  000008  8214               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   375  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   376                           intcon	equ	0xFF2
   377                           intcon3	equ	0xFF0
   378                           wreg	equ	0xFE8
   379                           
   380                           	psect	intcode_body
   381  000012                     __pintcode_body:
   382                           	opt stack 29
   383  000012                     int_func:
   384                           	opt stack 29
   385  000012  0006               	pop		; remove dummy address from shadow register refresh
   386  000014  CFFA F001          	movff	pclath,??_isr
   387  000018  CFFB F002          	movff	pclatu,??_isr+1
   388  00001C  CFE9 F003          	movff	fsr0l,??_isr+2
   389  000020  CFEA F004          	movff	fsr0h,??_isr+3
   390  000024  CFE1 F005          	movff	fsr1l,??_isr+4
   391  000028  CFE2 F006          	movff	fsr1h,??_isr+5
   392  00002C  CFD9 F007          	movff	fsr2l,??_isr+6
   393  000030  CFDA F008          	movff	fsr2h,??_isr+7
   394  000034  CFF3 F009          	movff	prodl,??_isr+8
   395  000038  CFF4 F00A          	movff	prodh,??_isr+9
   396  00003C  CFF6 F00B          	movff	tblptrl,??_isr+10
   397  000040  CFF7 F00C          	movff	tblptrh,??_isr+11
   398  000044  CFF8 F00D          	movff	tblptru,??_isr+12
   399  000048  CFF5 F00E          	movff	tablat,??_isr+13
   400                           
   401                           ;main.c: 120: if (INT0IF) {
   402  00004C  A2F2               	btfss	intcon,1,c	;volatile
   403  00004E  D003               	goto	i2l44
   404                           
   405                           ;main.c: 122: INT0IF = 0;
   406  000050  92F2               	bcf	intcon,1,c	;volatile
   407                           
   408                           ;main.c: 123: contar ^= 1; }
   409  000052  7013               	btg	_contar/(0+8),_contar& (0+7),c
   410  000054  D008               	goto	i2l47
   411  000056                     i2l44:
   412                           
   413                           ;main.c: 124: else if (INT1IF) {
   414  000056  A0F0               	btfss	intcon3,0,c	;volatile
   415  000058  D006               	goto	i2l47
   416                           
   417                           ;main.c: 126: INT1IF = 0;
   418  00005A  90F0               	bcf	intcon3,0,c	;volatile
   419                           
   420                           ;main.c: 127: disp1 = 0;
   421  00005C  0E00               	movlw	0
   422  00005E  6E12               	movwf	_disp1,c
   423                           
   424                           ;main.c: 128: disp2 = 0;
   425  000060  0E00               	movlw	0
   426  000062  6E11               	movwf	_disp2,c
   427                           
   428                           ;main.c: 129: contar = 0;
   429  000064  9013               	bcf	_contar/(0+8),_contar& (0+7),c
   430  000066                     i2l47:
   431  000066  C00E  FFF5         	movff	??_isr+13,tablat
   432  00006A  C00D  FFF8         	movff	??_isr+12,tblptru
   433  00006E  C00C  FFF7         	movff	??_isr+11,tblptrh
   434  000072  C00B  FFF6         	movff	??_isr+10,tblptrl
   435  000076  C00A  FFF4         	movff	??_isr+9,prodh
   436  00007A  C009  FFF3         	movff	??_isr+8,prodl
   437  00007E  C008  FFDA         	movff	??_isr+7,fsr2h
   438  000082  C007  FFD9         	movff	??_isr+6,fsr2l
   439  000086  C006  FFE2         	movff	??_isr+5,fsr1h
   440  00008A  C005  FFE1         	movff	??_isr+4,fsr1l
   441  00008E  C004  FFEA         	movff	??_isr+3,fsr0h
   442  000092  C003  FFE9         	movff	??_isr+2,fsr0l
   443  000096  C002  FFFB         	movff	??_isr+1,pclatu
   444  00009A  C001  FFFA         	movff	??_isr,pclath
   445  00009E  9214               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   446  0000A0  0011               	retfie		f
   447  0000A2                     __end_of_isr:
   448                           	opt stack 0
   449  0000                     pclatu	equ	0xFFB
   450                           pclath	equ	0xFFA
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           prodh	equ	0xFF4
   456                           prodl	equ	0xFF3
   457                           intcon	equ	0xFF2
   458                           intcon3	equ	0xFF0
   459                           fsr0h	equ	0xFEA
   460                           fsr0l	equ	0xFE9
   461                           wreg	equ	0xFE8
   462                           fsr1h	equ	0xFE2
   463                           fsr1l	equ	0xFE1
   464                           fsr2h	equ	0xFDA
   465                           fsr2l	equ	0xFD9
   466                           pclatu	equ	0xFFB
   467                           pclath	equ	0xFFA
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           prodh	equ	0xFF4
   473                           prodl	equ	0xFF3
   474                           intcon	equ	0xFF2
   475                           intcon3	equ	0xFF0
   476                           fsr0h	equ	0xFEA
   477                           fsr0l	equ	0xFE9
   478                           wreg	equ	0xFE8
   479                           fsr1h	equ	0xFE2
   480                           fsr1l	equ	0xFE1
   481                           fsr2h	equ	0xFDA
   482                           fsr2l	equ	0xFD9
   483                           
   484                           	psect	rparam
   485  0000                     pclatu	equ	0xFFB
   486                           pclath	equ	0xFFA
   487                           tblptru	equ	0xFF8
   488                           tblptrh	equ	0xFF7
   489                           tblptrl	equ	0xFF6
   490                           tablat	equ	0xFF5
   491                           prodh	equ	0xFF4
   492                           prodl	equ	0xFF3
   493                           intcon	equ	0xFF2
   494                           intcon3	equ	0xFF0
   495                           fsr0h	equ	0xFEA
   496                           fsr0l	equ	0xFE9
   497                           wreg	equ	0xFE8
   498                           fsr1h	equ	0xFE2
   499                           fsr1l	equ	0xFE1
   500                           fsr2h	equ	0xFDA
   501                           fsr2l	equ	0xFD9
   502                           
   503                           	psect	temp
   504  000014                     btemp:
   505                           	opt stack 0
   506  000014                     	ds	1
   507  0000                     int$flags	set	btemp
   508                           pclatu	equ	0xFFB
   509                           pclath	equ	0xFFA
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           prodh	equ	0xFF4
   515                           prodl	equ	0xFF3
   516                           intcon	equ	0xFF2
   517                           intcon3	equ	0xFF0
   518                           fsr0h	equ	0xFEA
   519                           fsr0l	equ	0xFE9
   520                           wreg	equ	0xFE8
   521                           fsr1h	equ	0xFE2
   522                           fsr1l	equ	0xFE1
   523                           fsr2h	equ	0xFDA
   524                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             14 COMRAM     2     2      0
                     _atualiza_PORTD
                              _conta
 ---------------------------------------------------------------------------------
 (1) _conta                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atualiza_PORTD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atualiza_PORTD
   _conta

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     10      13       1       20.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      20        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu May 18 13:43:37 2017

                     u67 00D4              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l673 00C0             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _isr 0008                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     ?_isr 0001  
                   i2l44 0056                     i2l47 0066                     _main 00A2  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0014                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_isr 0001            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _disp1 0012                    _disp2 0011  
                  _conta 00E2           __pbitbssCOMRAM 0098                    pclath 000FFA  
                  tablat 000FF5           __CFG_ICPRT$OFF 000000          __initialization 00FC  
         _atualiza_PORTD 010C             __end_of_main 00E2                   ??_main 000F  
          __activetblptr 000000                   ?_conta 0001                   _INT0IF 007F91  
                 _INT1IF 007F80   __end_of_atualiza_PORTD 0116           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                   _contar 0098                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0102          __CFG_PBADEN$OFF 000000          __CFG_FOSC$XT_XT 000000  
          ___rparam_used 000001          ?_atualiza_PORTD 0001           __pcstackCOMRAM 0001  
          __end_of_conta 00FC                  ??_conta 000F          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00FC  
                __ramtop 0800                  __ptext0 00A2                  __ptext1 00E2  
                __ptext2 010C             __size_of_isr 009A           __pintcode_body 0012  
   end_of_initialization 0102                  int_func 0012                _TRISBbits 000F93  
       ??_atualiza_PORTD 000F      start_initialization 00FC              __end_of_isr 00A2  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0011                __pintcode 0008  
         __size_of_conta 001A         __CFG_WDTPS$32768 000000              _INTCON3bits 000FF0  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0040  
               int$flags 0014    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
               intlevel2 0000  __size_of_atualiza_PORTD 000A  
