

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Jun 10 20:01:49 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           ; Version 1.41
    21                           ; Generated 25/01/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	nvCOMRAM
    56  000014                     __pnvCOMRAM:
    57                           	opt stack 0
    58  000014                     _disp1:
    59                           	opt stack 0
    60  000014                     	ds	1
    61  0000                     _PORTCbits	set	3970
    62  0000                     _PORTD	set	3971
    63  0000                     _INTCON3bits	set	4080
    64  0000                     _INTCONbits	set	4082
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISCbits	set	3988
    67  0000                     _TRISBbits	set	3987
    68  0000                     _INT1IF	set	32640
    69  0000                     _INT0IF	set	32657
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  000194                     __pcinit:
    75                           	opt stack 0
    76  000194                     start_initialization:
    77                           	opt stack 0
    78  000194                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to BITCOMRAM (1 bytes)
    82  000194  6A13               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
    83                           
    84                           ; Clear objects allocated to COMRAM (1 bytes)
    85  000196  6A15               	clrf	__pbssCOMRAM& (0+255),c
    86  000198                     end_of_initialization:
    87                           	opt stack 0
    88  000198                     __end_of__initialization:
    89                           	opt stack 0
    90  000198  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    91  00019A  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    92  00019C  0100               	movlb	0
    93  00019E  EF93  F000         	goto	_main	;jump to C main() function
    94                           
    95                           	psect	bitbssCOMRAM
    96  000098                     __pbitbssCOMRAM:
    97                           	opt stack 0
    98  000098                     _buzz:
    99                           	opt stack 0
   100  000098                     	ds	1
   101  000099                     _contar:
   102                           	opt stack 0
   103  000099                     	ds	1
   104                           
   105                           	psect	bssCOMRAM
   106  000015                     __pbssCOMRAM:
   107                           	opt stack 0
   108  000015                     _disp2:
   109                           	opt stack 0
   110  000015                     	ds	1
   111                           
   112                           	psect	cstackCOMRAM
   113  000001                     __pcstackCOMRAM:
   114                           	opt stack 0
   115  000001                     ??_isr:
   116                           
   117                           ; 1 bytes @ 0x0
   118  000001                     	ds	14
   119  00000F                     ??_buzzer:
   120                           
   121                           ; 1 bytes @ 0xE
   122  00000F                     	ds	2
   123  000011                     ??_main:
   124                           
   125                           ; 1 bytes @ 0x10
   126  000011                     	ds	2
   127                           
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   130 ;;
   131 ;; *************** function _main *****************
   132 ;; Defined at:
   133 ;;		line 75 in file "main.c"
   134 ;; Parameters:    Size  Location     Type
   135 ;;		None
   136 ;; Auto vars:     Size  Location     Type
   137 ;;		None
   138 ;; Return value:  Size  Location     Type
   139 ;;                  1    wreg      void 
   140 ;; Registers used:
   141 ;;		wreg, status,2, status,0, cstack
   142 ;; Tracked objects:
   143 ;;		On entry : 0/0
   144 ;;		On exit  : 0/0
   145 ;;		Unchanged: 0/0
   146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   147 ;;      Params:         0       0       0       0       0       0       0       0       0
   148 ;;      Locals:         0       0       0       0       0       0       0       0       0
   149 ;;      Temps:          2       0       0       0       0       0       0       0       0
   150 ;;      Totals:         2       0       0       0       0       0       0       0       0
   151 ;;Total ram usage:        2 bytes
   152 ;; Hardware stack levels required when called:    3
   153 ;; This function calls:
   154 ;;		_atualiza_PORTD
   155 ;;		_conta
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           	psect	text0
   162  000126                     __ptext0:
   163                           	opt stack 0
   164  000126                     _main:
   165                           	opt stack 28
   166                           
   167                           ;main.c: 77: TRISBbits.RB0 = 1;
   168                           
   169                           ;incstack = 0
   170  000126  8093               	bsf	3987,0,c	;volatile
   171                           
   172                           ;main.c: 78: TRISBbits.RB1 = 1;
   173  000128  8293               	bsf	3987,1,c	;volatile
   174                           
   175                           ;main.c: 79: TRISCbits.RC0 = 0;
   176  00012A  9094               	bcf	3988,0,c	;volatile
   177                           
   178                           ;main.c: 80: TRISD = 0;
   179  00012C  0E00               	movlw	0
   180  00012E  6E95               	movwf	3989,c	;volatile
   181                           
   182                           ;main.c: 81: INTCONbits.INT0IE = 1;
   183  000130  88F2               	bsf	intcon,4,c	;volatile
   184                           
   185                           ;main.c: 82: INTCON3bits.INT1IE = 1;
   186  000132  86F0               	bsf	intcon3,3,c	;volatile
   187                           
   188                           ;main.c: 83: INTCONbits.GIE = 1;
   189  000134  8EF2               	bsf	intcon,7,c	;volatile
   190                           
   191                           ;main.c: 84: INTCONbits.PEIE = 1;
   192  000136  8CF2               	bsf	intcon,6,c	;volatile
   193                           
   194                           ;main.c: 85: disp1 = 5;
   195  000138  0E05               	movlw	5
   196  00013A  6E14               	movwf	_disp1,c
   197                           
   198                           ;main.c: 86: disp2 = 0;
   199  00013C  0E00               	movlw	0
   200  00013E  6E15               	movwf	_disp2,c
   201                           
   202                           ;main.c: 87: PORTD = 0;
   203  000140  0E00               	movlw	0
   204  000142  6E83               	movwf	3971,c	;volatile
   205                           
   206                           ;main.c: 88: contar = 0;
   207  000144  9213               	bcf	_contar/(0+8),_contar& (0+7),c
   208  000146                     l727:
   209                           
   210                           ;main.c: 91: if (contar){
   211  000146  B213               	btfsc	_contar/(0+8),_contar& (0+7),c
   212                           
   213                           ;main.c: 92: conta();
   214  000148  ECB4  F000         	call	_conta	;wreg free
   215                           
   216                           ;main.c: 93: }
   217                           ;main.c: 94: atualiza_PORTD();
   218  00014C  ECD1  F000         	call	_atualiza_PORTD	;wreg free
   219                           
   220                           ;main.c: 95: _delay((unsigned long)((500)*(4000000/4000.0)));
   221  000150  0E03               	movlw	3
   222  000152  6E12               	movwf	(??_main+1)& (0+255),c
   223  000154  0E8A               	movlw	138
   224  000156  6E11               	movwf	??_main& (0+255),c
   225  000158  0E56               	movlw	86
   226  00015A                     u207:
   227  00015A  2EE8               	decfsz	wreg,f,c
   228  00015C  D7FE               	bra	u207
   229  00015E  2E11               	decfsz	??_main& (0+255),f,c
   230  000160  D7FC               	bra	u207
   231  000162  2E12               	decfsz	(??_main+1)& (0+255),f,c
   232  000164  D7FA               	bra	u207
   233  000166  D7EF               	goto	l727
   234  000168                     __end_of_main:
   235                           	opt stack 0
   236                           intcon	equ	0xFF2
   237                           intcon3	equ	0xFF0
   238                           wreg	equ	0xFE8
   239                           
   240 ;; *************** function _conta *****************
   241 ;; Defined at:
   242 ;;		line 103 in file "main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   256 ;;      Params:         0       0       0       0       0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0       0       0       0       0
   259 ;;      Totals:         0       0       0       0       0       0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels used:    1
   262 ;; Hardware stack levels required when called:    2
   263 ;; This function calls:
   264 ;;		_buzzer
   265 ;; This function is called by:
   266 ;;		_main
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text1
   271  000168                     __ptext1:
   272                           	opt stack 0
   273  000168                     _conta:
   274                           	opt stack 28
   275                           
   276                           ;main.c: 104: if(disp2 != 0 || disp1 != 0 ){
   277                           
   278                           ;incstack = 0
   279  000168  5015               	movf	_disp2,w,c
   280  00016A  A4D8               	btfss	status,2,c
   281  00016C  D003               	goto	l697
   282  00016E  5014               	movf	_disp1,w,c
   283  000170  B4D8               	btfsc	status,2,c
   284  000172  D00D               	goto	l709
   285  000174                     l697:
   286                           
   287                           ;main.c: 105: disp1--;
   288  000174  0614               	decf	_disp1,f,c
   289                           
   290                           ;main.c: 106: if (disp1 == 0xff){
   291  000176  2814               	incf	_disp1,w,c
   292  000178  A4D8               	btfss	status,2,c
   293  00017A  0012               	return	
   294                           
   295                           ;main.c: 107: disp1 = 9;
   296  00017C  0E09               	movlw	9
   297  00017E  6E14               	movwf	_disp1,c
   298                           
   299                           ;main.c: 108: disp2--;
   300  000180  0615               	decf	_disp2,f,c
   301                           
   302                           ;main.c: 109: if (disp2 == 0xff){
   303  000182  2815               	incf	_disp2,w,c
   304  000184  A4D8               	btfss	status,2,c
   305  000186  0012               	return	
   306                           
   307                           ;main.c: 110: disp2 = 0;
   308  000188  0E00               	movlw	0
   309  00018A  6E15               	movwf	_disp2,c
   310                           
   311                           ;main.c: 111: }
   312                           ;main.c: 112: }
   313                           ;main.c: 113: }else{
   314  00018C  0012               	return	
   315  00018E                     l709:
   316                           
   317                           ;main.c: 114: buzzer();
   318  00018E  EC6B  F000         	call	_buzzer	;wreg free
   319  000192  0012               	return	
   320  000194                     __end_of_conta:
   321                           	opt stack 0
   322                           intcon	equ	0xFF2
   323                           intcon3	equ	0xFF0
   324                           wreg	equ	0xFE8
   325                           status	equ	0xFD8
   326                           
   327 ;; *************** function _buzzer *****************
   328 ;; Defined at:
   329 ;;		line 117 in file "main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   343 ;;      Params:         0       0       0       0       0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0
   345 ;;      Temps:          2       0       0       0       0       0       0       0       0
   346 ;;      Totals:         2       0       0       0       0       0       0       0       0
   347 ;;Total ram usage:        2 bytes
   348 ;; Hardware stack levels used:    1
   349 ;; Hardware stack levels required when called:    1
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		_conta
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text2
   358  0000D6                     __ptext2:
   359                           	opt stack 0
   360  0000D6                     _buzzer:
   361                           	opt stack 28
   362                           
   363                           ;main.c: 118: INTCONbits.GIE = 1;
   364                           
   365                           ;incstack = 0
   366  0000D6  8EF2               	bsf	intcon,7,c	;volatile
   367                           
   368                           ;main.c: 119: INTCONbits.PEIE = 1;
   369  0000D8  8CF2               	bsf	intcon,6,c	;volatile
   370                           
   371                           ;main.c: 120: INTCONbits.INT0IE = 1;
   372  0000DA  88F2               	bsf	intcon,4,c	;volatile
   373                           
   374                           ;main.c: 121: INTCON3bits.INT1IE = 1;
   375  0000DC  86F0               	bsf	intcon3,3,c	;volatile
   376                           
   377                           ;main.c: 122: buzz = 1;
   378  0000DE  8013               	bsf	_buzz/(0+8),_buzz& (0+7),c
   379  0000E0                     l56:
   380                           
   381                           ;main.c: 124: if(!buzz) break;
   382  0000E0  A013               	btfss	_buzz/(0+8),_buzz& (0+7),c
   383  0000E2  0012               	return	
   384                           
   385                           ;main.c: 125: PORTCbits.RC0 = 1;
   386  0000E4  8082               	bsf	3970,0,c	;volatile
   387                           
   388                           ;main.c: 126: if(!buzz) break;
   389  0000E6  A013               	btfss	_buzz/(0+8),_buzz& (0+7),c
   390  0000E8  0012               	return	
   391                           
   392                           ;main.c: 127: _delay((unsigned long)((250)*(4000000/4000.0)));
   393  0000EA  0E02               	movlw	2
   394  0000EC  6E10               	movwf	(??_buzzer+1)& (0+255),c
   395  0000EE  0E45               	movlw	69
   396  0000F0  6E0F               	movwf	??_buzzer& (0+255),c
   397  0000F2  0EAA               	movlw	170
   398  0000F4                     u217:
   399  0000F4  2EE8               	decfsz	wreg,f,c
   400  0000F6  D7FE               	bra	u217
   401  0000F8  2E0F               	decfsz	??_buzzer& (0+255),f,c
   402  0000FA  D7FC               	bra	u217
   403  0000FC  2E10               	decfsz	(??_buzzer+1)& (0+255),f,c
   404  0000FE  D7FA               	bra	u217
   405                           
   406                           ;main.c: 128: if(!buzz) break;
   407  000100  A013               	btfss	_buzz/(0+8),_buzz& (0+7),c
   408  000102  0012               	return	
   409                           
   410                           ;main.c: 129: PORTCbits.RC0 = 0;
   411  000104  9082               	bcf	3970,0,c	;volatile
   412                           
   413                           ;main.c: 130: if(!buzz) break;
   414  000106  A013               	btfss	_buzz/(0+8),_buzz& (0+7),c
   415  000108  0012               	return	
   416                           
   417                           ;main.c: 131: _delay((unsigned long)((1000)*(4000000/4000.0)));
   418  00010A  0E06               	movlw	6
   419  00010C  6E10               	movwf	(??_buzzer+1)& (0+255),c
   420  00010E  0E13               	movlw	19
   421  000110  6E0F               	movwf	??_buzzer& (0+255),c
   422  000112  0EAE               	movlw	174
   423  000114                     u227:
   424  000114  2EE8               	decfsz	wreg,f,c
   425  000116  D7FE               	bra	u227
   426  000118  2E0F               	decfsz	??_buzzer& (0+255),f,c
   427  00011A  D7FC               	bra	u227
   428  00011C  2E10               	decfsz	(??_buzzer+1)& (0+255),f,c
   429  00011E  D7FA               	bra	u227
   430                           
   431                           ;main.c: 132: if(!buzz) break;
   432  000120  A013               	btfss	_buzz/(0+8),_buzz& (0+7),c
   433  000122  0012               	return	
   434  000124  D7DD               	goto	l56
   435  000126                     __end_of_buzzer:
   436                           	opt stack 0
   437                           intcon	equ	0xFF2
   438                           intcon3	equ	0xFF0
   439                           wreg	equ	0xFE8
   440                           status	equ	0xFD8
   441                           
   442 ;; *************** function _atualiza_PORTD *****************
   443 ;; Defined at:
   444 ;;		line 99 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   458 ;;      Params:         0       0       0       0       0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0       0       0       0       0
   461 ;;      Totals:         0       0       0       0       0       0       0       0       0
   462 ;;Total ram usage:        0 bytes
   463 ;; Hardware stack levels used:    1
   464 ;; Hardware stack levels required when called:    1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text3
   473  0001A2                     __ptext3:
   474                           	opt stack 0
   475  0001A2                     _atualiza_PORTD:
   476                           	opt stack 29
   477                           
   478                           ;main.c: 100: PORTD = (disp2 << 4) | disp1;
   479                           
   480                           ;incstack = 0
   481  0001A2  3815               	swapf	_disp2,w,c
   482  0001A4  0BF0               	andlw	240
   483  0001A6  1014               	iorwf	_disp1,w,c
   484  0001A8  6E83               	movwf	3971,c	;volatile
   485  0001AA  0012               	return		;funcret
   486  0001AC                     __end_of_atualiza_PORTD:
   487                           	opt stack 0
   488                           intcon	equ	0xFF2
   489                           intcon3	equ	0xFF0
   490                           wreg	equ	0xFE8
   491                           status	equ	0xFD8
   492                           
   493 ;; *************** function _isr *****************
   494 ;; Defined at:
   495 ;;		line 136 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   509 ;;      Params:         0       0       0       0       0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0       0       0       0       0
   511 ;;      Temps:         14       0       0       0       0       0       0       0       0
   512 ;;      Totals:        14       0       0       0       0       0       0       0       0
   513 ;;Total ram usage:       14 bytes
   514 ;; Hardware stack levels used:    1
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		Interrupt level 2
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	intcode
   523  000008                     __pintcode:
   524                           	opt stack 0
   525  000008                     _isr:
   526                           	opt stack 28
   527                           
   528                           ;incstack = 0
   529  000008  8216               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   530  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   531                           intcon	equ	0xFF2
   532                           intcon3	equ	0xFF0
   533                           wreg	equ	0xFE8
   534                           status	equ	0xFD8
   535                           
   536                           	psect	intcode_body
   537  000012                     __pintcode_body:
   538                           	opt stack 28
   539  000012                     int_func:
   540                           	opt stack 28
   541  000012  0006               	pop		; remove dummy address from shadow register refresh
   542  000014  CFFA F001          	movff	pclath,??_isr
   543  000018  CFFB F002          	movff	pclatu,??_isr+1
   544  00001C  CFE9 F003          	movff	fsr0l,??_isr+2
   545  000020  CFEA F004          	movff	fsr0h,??_isr+3
   546  000024  CFE1 F005          	movff	fsr1l,??_isr+4
   547  000028  CFE2 F006          	movff	fsr1h,??_isr+5
   548  00002C  CFD9 F007          	movff	fsr2l,??_isr+6
   549  000030  CFDA F008          	movff	fsr2h,??_isr+7
   550  000034  CFF3 F009          	movff	prodl,??_isr+8
   551  000038  CFF4 F00A          	movff	prodh,??_isr+9
   552  00003C  CFF6 F00B          	movff	tblptrl,??_isr+10
   553  000040  CFF7 F00C          	movff	tblptrh,??_isr+11
   554  000044  CFF8 F00D          	movff	tblptru,??_isr+12
   555  000048  CFF5 F00E          	movff	tablat,??_isr+13
   556                           
   557                           ;main.c: 137: if (INT0IF && buzz == 0){
   558  00004C  B2F2               	btfsc	intcon,1,c	;volatile
   559  00004E  B013               	btfsc	_buzz/(0+8),_buzz& (0+7),c
   560  000050  D008               	goto	i2l67
   561                           
   562                           ;main.c: 139: INT0IF = 0;
   563  000052  92F2               	bcf	intcon,1,c	;volatile
   564                           
   565                           ;main.c: 140: disp2++;
   566  000054  2A15               	incf	_disp2,f,c
   567                           
   568                           ;main.c: 141: if(disp2 > 9){
   569  000056  0E09               	movlw	9
   570  000058  6415               	cpfsgt	_disp2,c
   571  00005A  D01F               	goto	i2l75
   572                           
   573                           ;main.c: 142: disp2 = 0;
   574  00005C  0E00               	movlw	0
   575  00005E  6E15               	movwf	_disp2,c
   576                           
   577                           ;main.c: 143: }
   578                           ;main.c: 144: }
   579  000060  D01C               	goto	i2l75
   580  000062                     i2l67:
   581                           
   582                           ;main.c: 145: else if (INT1IF && buzz == 0){
   583  000062  B0F0               	btfsc	intcon3,0,c	;volatile
   584  000064  B013               	btfsc	_buzz/(0+8),_buzz& (0+7),c
   585  000066  D007               	goto	i2l70
   586                           
   587                           ;main.c: 147: INT1IF = 0;
   588  000068  90F0               	bcf	intcon3,0,c	;volatile
   589                           
   590                           ;main.c: 148: contar ^= 1;
   591  00006A  7213               	btg	_contar/(0+8),_contar& (0+7),c
   592                           
   593                           ;main.c: 149: INTCONbits.GIE = 0;
   594  00006C  9EF2               	bcf	intcon,7,c	;volatile
   595                           
   596                           ;main.c: 150: INTCONbits.PEIE = 0;
   597  00006E  9CF2               	bcf	intcon,6,c	;volatile
   598                           
   599                           ;main.c: 151: INTCONbits.INT0IE = 0;
   600  000070  98F2               	bcf	intcon,4,c	;volatile
   601                           
   602                           ;main.c: 152: INTCON3bits.INT1IE = 0;
   603  000072  96F0               	bcf	intcon3,3,c	;volatile
   604                           
   605                           ;main.c: 153: }
   606  000074  D012               	goto	i2l75
   607  000076                     i2l70:
   608                           
   609                           ;main.c: 154: else if (INT0IF && buzz == 1){
   610  000076  B2F2               	btfsc	intcon,1,c	;volatile
   611  000078  A013               	btfss	_buzz/(0+8),_buzz& (0+7),c
   612  00007A  D007               	goto	i2l72
   613                           
   614                           ;main.c: 155: INT0IF = 0;
   615  00007C  92F2               	bcf	intcon,1,c	;volatile
   616  00007E  D009               	goto	L1
   617  000080                     i2l753:
   618                           
   619                           ;main.c: 158: disp1 = 5;
   620  000080  0E05               	movlw	5
   621  000082  6E14               	movwf	_disp1,c
   622                           
   623                           ;main.c: 159: disp2 = 0;
   624  000084  0E00               	movlw	0
   625  000086  6E15               	movwf	_disp2,c
   626  000088  D007               	goto	i2l763
   627  00008A                     i2l72:
   628                           
   629                           ;main.c: 164: else if (INT1IF && buzz == 1){
   630  00008A  B0F0               	btfsc	intcon3,0,c	;volatile
   631  00008C  A013               	btfss	_buzz/(0+8),_buzz& (0+7),c
   632  00008E  D005               	goto	i2l75
   633                           
   634                           ;main.c: 165: INT1IF = 0;
   635  000090  90F0               	bcf	intcon3,0,c	;volatile
   636  000092                     L1:
   637                           
   638                           ;main.c: 166: buzz = 0;
   639  000092  9013               	bcf	_buzz/(0+8),_buzz& (0+7),c
   640                           
   641                           ;main.c: 167: PORTCbits.RC0 = 0;
   642  000094  9082               	bcf	3970,0,c	;volatile
   643  000096  D7F4               	goto	i2l753
   644  000098                     i2l763:
   645                           
   646                           ;main.c: 170: contar = 0;
   647  000098  9213               	bcf	_contar/(0+8),_contar& (0+7),c
   648  00009A                     i2l75:
   649  00009A  C00E  FFF5         	movff	??_isr+13,tablat
   650  00009E  C00D  FFF8         	movff	??_isr+12,tblptru
   651  0000A2  C00C  FFF7         	movff	??_isr+11,tblptrh
   652  0000A6  C00B  FFF6         	movff	??_isr+10,tblptrl
   653  0000AA  C00A  FFF4         	movff	??_isr+9,prodh
   654  0000AE  C009  FFF3         	movff	??_isr+8,prodl
   655  0000B2  C008  FFDA         	movff	??_isr+7,fsr2h
   656  0000B6  C007  FFD9         	movff	??_isr+6,fsr2l
   657  0000BA  C006  FFE2         	movff	??_isr+5,fsr1h
   658  0000BE  C005  FFE1         	movff	??_isr+4,fsr1l
   659  0000C2  C004  FFEA         	movff	??_isr+3,fsr0h
   660  0000C6  C003  FFE9         	movff	??_isr+2,fsr0l
   661  0000CA  C002  FFFB         	movff	??_isr+1,pclatu
   662  0000CE  C001  FFFA         	movff	??_isr,pclath
   663  0000D2  9216               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   664  0000D4  0011               	retfie		f
   665  0000D6                     __end_of_isr:
   666                           	opt stack 0
   667  0000                     pclatu	equ	0xFFB
   668                           pclath	equ	0xFFA
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           prodh	equ	0xFF4
   674                           prodl	equ	0xFF3
   675                           intcon	equ	0xFF2
   676                           intcon3	equ	0xFF0
   677                           fsr0h	equ	0xFEA
   678                           fsr0l	equ	0xFE9
   679                           wreg	equ	0xFE8
   680                           fsr1h	equ	0xFE2
   681                           fsr1l	equ	0xFE1
   682                           fsr2h	equ	0xFDA
   683                           fsr2l	equ	0xFD9
   684                           status	equ	0xFD8
   685                           pclatu	equ	0xFFB
   686                           pclath	equ	0xFFA
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           tblptrl	equ	0xFF6
   690                           tablat	equ	0xFF5
   691                           prodh	equ	0xFF4
   692                           prodl	equ	0xFF3
   693                           intcon	equ	0xFF2
   694                           intcon3	equ	0xFF0
   695                           fsr0h	equ	0xFEA
   696                           fsr0l	equ	0xFE9
   697                           wreg	equ	0xFE8
   698                           fsr1h	equ	0xFE2
   699                           fsr1l	equ	0xFE1
   700                           fsr2h	equ	0xFDA
   701                           fsr2l	equ	0xFD9
   702                           status	equ	0xFD8
   703                           
   704                           	psect	rparam
   705  0000                     pclatu	equ	0xFFB
   706                           pclath	equ	0xFFA
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           prodh	equ	0xFF4
   712                           prodl	equ	0xFF3
   713                           intcon	equ	0xFF2
   714                           intcon3	equ	0xFF0
   715                           fsr0h	equ	0xFEA
   716                           fsr0l	equ	0xFE9
   717                           wreg	equ	0xFE8
   718                           fsr1h	equ	0xFE2
   719                           fsr1l	equ	0xFE1
   720                           fsr2h	equ	0xFDA
   721                           fsr2l	equ	0xFD9
   722                           status	equ	0xFD8
   723                           
   724                           	psect	temp
   725  000016                     btemp:
   726                           	opt stack 0
   727  000016                     	ds	1
   728  0000                     int$flags	set	btemp
   729                           pclatu	equ	0xFFB
   730                           pclath	equ	0xFFA
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           prodh	equ	0xFF4
   736                           prodl	equ	0xFF3
   737                           intcon	equ	0xFF2
   738                           intcon3	equ	0xFF0
   739                           fsr0h	equ	0xFEA
   740                           fsr0l	equ	0xFE9
   741                           wreg	equ	0xFE8
   742                           fsr1h	equ	0xFE2
   743                           fsr1l	equ	0xFE1
   744                           fsr2h	equ	0xFDA
   745                           fsr2l	equ	0xFD9
   746                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _conta->_buzzer

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             16 COMRAM     2     2      0
                     _atualiza_PORTD
                              _conta
 ---------------------------------------------------------------------------------
 (1) _conta                                                0     0      0       0
                             _buzzer
 ---------------------------------------------------------------------------------
 (2) _buzzer                                               2     2      0       0
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _atualiza_PORTD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atualiza_PORTD
   _conta
     _buzzer

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     12      15       1       22.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      20        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Jun 10 20:01:49 2019

                     l56 00E0              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l709 018E                      l727 0146  
                    l697 0174             __CFG_CPB$OFF 000000                      u207 015A  
                    u217 00F4                      u227 0114             __CFG_CPD$OFF 000000  
                    _isr 0008                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     ?_isr 0001                     i2l70 0076  
                   i2l72 008A                     i2l75 009A                     i2l67 0062  
                   _main 0126                     _buzz 0098                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0016  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_isr 0001            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001                    i2l753 0080                    i2l763 0098  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _disp1 0014  
                  _disp2 0015                    _conta 0168           __pbitbssCOMRAM 0098  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
         __CFG_ICPRT$OFF 000000          __initialization 0194           _atualiza_PORTD 01A2  
           __end_of_main 0168                   ??_main 0011            __activetblptr 000000  
                 ?_conta 0001                   _INT0IF 007F91                   _INT1IF 007F80  
 __end_of_atualiza_PORTD 01AC           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 _contar 0099                   _buzzer 00D6                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0198          __CFG_PBADEN$OFF 000000          __CFG_FOSC$XT_XT 000000  
          ___rparam_used 000001          ?_atualiza_PORTD 0001           __pcstackCOMRAM 0001  
          __end_of_conta 0194                  ??_conta 0011               __pnvCOMRAM 0014  
                ?_buzzer 0001          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0194          __size_of_buzzer 0050  
                __ramtop 0800                  __ptext0 0126                  __ptext1 0168  
                __ptext2 00D6                  __ptext3 01A2             __size_of_isr 00CE  
         __pintcode_body 0012     end_of_initialization 0198                  int_func 0012  
              _PORTCbits 000F82                _TRISBbits 000F93                _TRISCbits 000F94  
       ??_atualiza_PORTD 000F           __end_of_buzzer 0126      start_initialization 0194  
            __end_of_isr 00D6         __CFG_LPT1OSC$OFF 000000                 ??_buzzer 000F  
            __pbssCOMRAM 0015                __pintcode 0008           __size_of_conta 002C  
       __CFG_WDTPS$32768 000000              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0042                 int$flags 0016  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2                 intlevel2 0000  
__size_of_atualiza_PORTD 000A  
